openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url 12
paths:
  /api/users/{id}:
    get:
      tags:
      - user-api-controller
      summary: Get a user by ID
      description: Fetch a user by their unique ID
      operationId: getUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid ID supplied
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        "200":
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
      - user-api-controller
      summary: Update an existing user
      description: Update details of an existing user by ID
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: User not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
      - user-api-controller
      summary: Delete a user
      description: Delete a user by their unique ID
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: User deleted successfully
        "404":
          description: User not found
  /api/users:
    get:
      tags:
      - user-api-controller
      summary: Get all users
      description: Fetch all users from the database
      operationId: getAllUsers
      responses:
        "200":
          description: Users fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    post:
      tags:
      - user-api-controller
      summary: Create a new user
      description: Add a new user to the database
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      required:
      - email
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phoneNo:
          type: integer
          format: int64
