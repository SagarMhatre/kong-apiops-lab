type: spec.insomnia.rest/5.0
name: mcquery-users
meta:
  id: wrk_9475c6079bdf4f5192a256e20ada73e9
  created: 1744008466562
  modified: 1744008680697
cookieJar:
  name: Default Jar
  meta:
    id: jar_c957d39620626977364ed7982a25b181920e64cd
    created: 1744008466566
    modified: 1744008466566
environments:
  name: Base Environment
  meta:
    id: env_c957d39620626977364ed7982a25b181920e64cd
    created: 1744008466566
    modified: 1744008466566
    isPrivate: false
spec:
  contents:
    openapi: 3.0.1
    info:
      title: OpenAPI definition
      version: v0
      description: My first API
      contact:
        email: sagarmmhatre@yahoo.co.in
    servers:
      - url: http://localhost:8080
        description: Generated server url
    tags:
      - name: user-api-controller
    paths:
      "/api/users/{id}":
        get:
          tags:
            - user-api-controller
          summary: Get a user by ID
          description: Fetch a user by their unique ID
          operationId: getUserById
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int64
          responses:
            "200":
              description: User found
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/User"
            "400":
              description: Invalid ID supplied
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/User"
            "404":
              description: User not found
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/User"
        put:
          tags:
            - user-api-controller
          summary: Update an existing user
          description: Update details of an existing user by ID
          operationId: updateUser
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int64
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/User"
            required: true
          responses:
            "200":
              description: User updated successfully
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/User"
            "400":
              description: Invalid input
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/User"
            "404":
              description: User not found
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/User"
        delete:
          tags:
            - user-api-controller
          summary: Delete a user
          description: Delete a user by their unique ID
          operationId: deleteUser
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int64
          responses:
            "204":
              description: User deleted successfully
            "404":
              description: User not found
      /api/users:
        get:
          tags:
            - user-api-controller
          summary: Get all users
          description: Fetch all users from the database
          operationId: getAllUsers
          responses:
            "200":
              description: Users fetched successfully
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/User"
        post:
          tags:
            - user-api-controller
          summary: Create a new user
          description: Add a new user to the database
          operationId: createUser
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/User"
            required: true
          responses:
            "201":
              description: User created successfully
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/User"
            "400":
              description: Invalid input
              content:
                "*/*":
                  schema:
                    $ref: "#/components/schemas/User"
    components:
      schemas:
        User:
          required:
            - email
            - name
          type: object
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
            email:
              type: string
            phoneNo:
              type: integer
              format: int64
  meta:
    id: spc_7066e95868174a418ca23338c908c956
    created: 1744008466564
    modified: 1744008680695
